const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

try {
  // Read base version from package.json
  const pkgPath = path.resolve(__dirname, '../package.json');
  const pkg = JSON.parse(fs.readFileSync(pkgPath, 'utf8'));
  const baseVersion = (pkg.version || '0.0.0').trim();

  // Get commit count from git
  let commitCount = 'dev';
  try {
    commitCount = execSync('git rev-list --count HEAD', {
      encoding: 'utf8',
    }).trim();
  } catch {
    console.warn('⚠️ Could not get Git commit count. Falling back to "dev".');
  }

  // Compose final version string
  const versionString = `${baseVersion}.${commitCount}`;

  // Write to src/version.ts
  const versionTsPath = path.resolve(__dirname, '../src/version.ts');
  const content =
    `// This file is auto-generated by scripts/update-version.js\n` +
    `export const APP_VERSION = "${versionString}";\n`;

  fs.writeFileSync(versionTsPath, content, 'utf8');
  console.log(`✅ Generated APP_VERSION = ${versionString}`);
} catch (error) {
  console.error('❌ Failed to generate version file:', error);
  process.exit(1);
}
